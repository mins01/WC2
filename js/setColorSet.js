var setColorSet = {
	//색상세트들
	"colorSets":{}, 
	//-- 가장 가까운색 찾기
	"getClosestColor":function(r,g,b,colorSet){
		var closestSet = null;
		var total=0,total2=0;
		for(var i=0,m=colorSet.length;i<m;i++){
				total2=Math.abs(r-colorSet[i][0]) + Math.abs(g-colorSet[i][1]) +Math.abs(b-colorSet[i][2]);
			if(i==0){
				closestSet = colorSet[i];
				total = total2;
			}else{
				
				if(total>total2){
					closestSet = colorSet[i];
					total = total2;
				}
			}
			if(total==0){break;}
		}
		return closestSet;
	},
	"createImageData":function(w, h) {
		if(!this.tmpCanvas){
			this.tmpCanvas = document.createElement('canvas');
			this.tmpCtx = this.tmpCanvas.getContext('2d');	
		}		
    return this.tmpCtx.createImageData(w, h);
  },
	"createImageDataByImageData":function(imageData) {
		if(!this.tmpCanvas){
			this.tmpCanvas = document.createElement('canvas');
			this.tmpCtx = this.tmpCanvas.getContext('2d');	
		}		
    return this.tmpCtx.createImageData(imageData);
  },
	"changeImageData":function(imageData,i_colorSet){
		var toImageData = this.createImageDataByImageData(imageData);
	  
		// var toImageData = Object.assign({}, imageData);
		if(typeof i_colorSet == "string"){
			var colorSet = this.colorSets[i_colorSet];
			
		}else{
			var colorSet = i_colorSet
		}
		if(!colorSet || !colorSet[0]){
			throw new Error("not supported colorSet  '"+i_colorSet+"'");
		}
		
		for(var i=0,m=imageData.data.length;i<m;i+=4){
			var c0 = imageData.data[i];
			var c1 = imageData.data[i+1];
			var c2 = imageData.data[i+2];
			var c3 = imageData.data[i+3];
			var closestSet = this.getClosestColor(c0,c1,c2,colorSet);
			toImageData.data[i] = closestSet[0];
			toImageData.data[i+1] = closestSet[1];
			toImageData.data[i+2] = closestSet[2];
			toImageData.data[i+3] = c3;
		}
		// console.log(imagedata);
		return toImageData;
		// 
	},
	
	
}
//-- 2색
setColorSet.colorSets['color_1bit'] = [[0,0,0],[255,255,255]]
//-- 4색
setColorSet.colorSets['color_2bit'] = [[0,0,0],[64,64,64],[128,128,128],[255,255,255]]
//-- 16색
setColorSet.colorSets['color_4bit'] = [[0,0,0],
[255,255,255],
[255,0,0],
[0,255,0],
[0,0,255],
[255,255,0],
[0,255,255],
[255,0,255],
[192,192,192],
[128,128,128],
[128,0,0],
[128,128,0],
[0,128,0],
[128,0,128],
[0,128,128],
[0,0,128]];
//-- 256 색
setColorSet.colorSets['color_8bit'] = [[0,0,0],
[128,0,0],
[0,128,0],
[128,128,0],
[0,0,128],
[128,0,128],
[0,128,128],
[192,192,192],
[128,128,128],
[255,0,0],
[0,255,0],
[255,255,0],
[0,0,255],
[255,0,255],
[0,255,255],
[255,255,255],
[0,0,0],
[0,0,95],
[0,0,135],
[0,0,175],
[0,0,215],
[0,0,255],
[0,95,0],
[0,95,95],
[0,95,135],
[0,95,175],
[0,95,215],
[0,95,255],
[0,135,0],
[0,135,95],
[0,135,135],
[0,135,175],
[0,135,215],
[0,135,255],
[0,175,0],
[0,175,95],
[0,175,135],
[0,175,175],
[0,175,215],
[0,175,255],
[0,215,0],
[0,215,95],
[0,215,135],
[0,215,175],
[0,215,215],
[0,215,255],
[0,255,0],
[0,255,95],
[0,255,135],
[0,255,175],
[0,255,215],
[0,255,255],
[95,0,0],
[95,0,95],
[95,0,135],
[95,0,175],
[95,0,215],
[95,0,255],
[95,95,0],
[95,95,95],
[95,95,135],
[95,95,175],
[95,95,215],
[95,95,255],
[95,135,0],
[95,135,95],
[95,135,135],
[95,135,175],
[95,135,215],
[95,135,255],
[95,175,0],
[95,175,95],
[95,175,135],
[95,175,175],
[95,175,215],
[95,175,255],
[95,215,0],
[95,215,95],
[95,215,135],
[95,215,175],
[95,215,215],
[95,215,255],
[95,255,0],
[95,255,95],
[95,255,135],
[95,255,175],
[95,255,215],
[95,255,255],
[135,0,0],
[135,0,95],
[135,0,135],
[135,0,175],
[135,0,215],
[135,0,255],
[135,95,0],
[135,95,95],
[135,95,135],
[135,95,175],
[135,95,215],
[135,95,255],
[135,135,0],
[135,135,95],
[135,135,135],
[135,135,175],
[135,135,215],
[135,135,255],
[135,175,0],
[135,175,95],
[135,175,135],
[135,175,175],
[135,175,215],
[135,175,255],
[135,215,0],
[135,215,95],
[135,215,135],
[135,215,175],
[135,215,215],
[135,215,255],
[135,255,0],
[135,255,95],
[135,255,135],
[135,255,175],
[135,255,215],
[135,255,255],
[175,0,0],
[175,0,95],
[175,0,135],
[175,0,175],
[175,0,215],
[175,0,255],
[175,95,0],
[175,95,95],
[175,95,135],
[175,95,175],
[175,95,215],
[175,95,255],
[175,135,0],
[175,135,95],
[175,135,135],
[175,135,175],
[175,135,215],
[175,135,255],
[175,175,0],
[175,175,95],
[175,175,135],
[175,175,175],
[175,175,215],
[175,175,255],
[175,215,0],
[175,215,95],
[175,215,135],
[175,215,175],
[175,215,215],
[175,215,255],
[175,255,0],
[175,255,95],
[175,255,135],
[175,255,175],
[175,255,215],
[175,255,255],
[215,0,0],
[215,0,95],
[215,0,135],
[215,0,175],
[215,0,215],
[215,0,255],
[215,95,0],
[215,95,95],
[215,95,135],
[215,95,175],
[215,95,215],
[215,95,255],
[215,135,0],
[215,135,95],
[215,135,135],
[215,135,175],
[215,135,215],
[215,135,255],
[215,175,0],
[215,175,95],
[215,175,135],
[215,175,175],
[215,175,215],
[215,175,255],
[215,215,0],
[215,215,95],
[215,215,135],
[215,215,175],
[215,215,215],
[215,215,255],
[215,255,0],
[215,255,95],
[215,255,135],
[215,255,175],
[215,255,215],
[215,255,255],
[255,0,0],
[255,0,95],
[255,0,135],
[255,0,175],
[255,0,215],
[255,0,255],
[255,95,0],
[255,95,95],
[255,95,135],
[255,95,175],
[255,95,215],
[255,95,255],
[255,135,0],
[255,135,95],
[255,135,135],
[255,135,175],
[255,135,215],
[255,135,255],
[255,175,0],
[255,175,95],
[255,175,135],
[255,175,175],
[255,175,215],
[255,175,255],
[255,215,0],
[255,215,95],
[255,215,135],
[255,215,175],
[255,215,215],
[255,215,255],
[255,255,0],
[255,255,95],
[255,255,135],
[255,255,175],
[255,255,215],
[255,255,255],
[8,8,8],
[18,18,18],
[28,28,28],
[38,38,38],
[48,48,48],
[58,58,58],
[68,68,68],
[78,78,78],
[88,88,88],
[98,98,98],
[108,108,108],
[118,118,118],
[128,128,128],
[138,138,138],
[148,148,148],
[158,158,158],
[168,168,168],
[178,178,178],
[188,188,188],
[198,198,198],
[208,208,208],
[218,218,218],
[228,228,228],
[238,238,238],];